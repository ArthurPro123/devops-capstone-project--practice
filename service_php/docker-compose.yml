version: '3.8'

services:
  mysql:  # The hostname for the mysql service will be the service name itself (mysql)
    image: yobasystems/alpine-mariadb:11.4.8
    environment:
      #
      # `environment` passes the variables into the container's environment (so
      # your PHP app can access them).
      #
      # It does not export them as shell environment variables.
      #
      MYSQL_USER: ${DB_USER}
      MYSQL_ROOT_PASSWORD: ${DB_PASS}
      MYSQL_PASSWORD: ${DB_PASS}  # # Added just in case.
      #
      ## MYSQL_USER: ${DB_USER}      # Only if you want a non-root user
      ## MYSQL_PASSWORD: ${DB_PASS}  # Only if you want a non-root user
      #
      MYSQL_DATABASE: ${DB_NAME}
      ##MYSQL_ALLOW_EMPTY_ROOT_PASSWORD: ${MYSQL_ALLOW_EMPTY_ROOT_PASSWORD}
      ###MYSQL_ALLOW_EMPTY_ROOT_PASSWORD: yes
      ###MARIADB_ALLOW_EMPTY_ROOT_PASSWORD: yes

    volumes:
      - ./mysql_data:/var/lib/mysql
      #
      # Mount the init-db.sql file into the container at a known path:
      - ./init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "${MYSQL_PORT}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 5s
      timeout: 5s
      retries: 10

  php:
    build:
      context: .
      # args:
        # APP_MODE: ${APP_MODE:production}
    ports:
      - "8080:80"
    environment:
      APP_MODE: ${APP_MODE}
      MYSQL_PORT: temp_val_test
      DB_HOST: ${DB_HOST}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      DB_NAME: ${DB_NAME}
    volumes:
      #
      # Overrides those files in Dockerfile during development for live reloading.
      # Might be useful to have for 
      # * Active development
      # * Debugging
      #
      - ./src:/var/www/html/src
      - ./config:/var/www/html/config
      - ./.htaccess.production:/var/www/html/.htaccess
      - ./config/apache-config.conf:/etc/apache2/sites-available/000-default.conf
    depends_on:
      mysql:
        condition: service_healthy
