---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:  
  name: cd-pipeline
spec:
  workspaces:
    - name: pipeline-workspace
  params:
    - name: repo-url
    - name: branch
      default: main
    - name: build-image

  tasks:
    - name: init
      workspaces:
        - name: source  #  Expects a workspace named "source".
          workspace: pipeline-workspace          
      taskRef:
        name: cleanup


    - name: clone
      workspaces:
        - name: output  # Expects a workspace named "output".
          #
          # The names source and output are task-specific 
          # and only matter within the context of the task.
         
          workspace: pipeline-workspace          
      taskRef:
        name: git-clone
      params:
        - name: url
          value: $(params.repo-url)
        - name: revision
          value: $(params.branch)
      runAfter:
        - init
    - name: deploy
      workspaces:
        - name: manifest-dir
          workspace: pipeline-workspace          
      taskRef:
        name: openshift-client
        kind: ClusterTask
      params:
      - name: SCRIPT
        value: |
          echo "Restoring original manifest..."
          cp -v deploy/deployment.yaml.template deploy/deployment.yaml

          echo "Updating manifest..."
          sed -i "s|IMAGE_NAME_HERE|$(params.build-image)|" deploy/deployment.yaml
          echo
          echo
          echo "Show SSS edited file:"
          cat deploy/deployment.yaml | grep 'image:'
          echo 
          echo
          #
          # Replaces IMAGE_NAME_HERE with $(params.build-image), 

          cat deploy/deployment.yaml

          echo "Deploying to OpenShift..."
          oc apply -f deploy/
          oc get pods -l app=accounts
      runAfter:
        - clone
